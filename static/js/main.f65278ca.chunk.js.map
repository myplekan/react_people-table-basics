{"version":3,"sources":["App.tsx","components/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink.tsx","components/PeoplePage.tsx","components/NotFoundPage.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","App","className","role","to","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","sex","name","born","died","mother","father","motherName","fatherName","slugValue","useParams","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","error","setError","useEffect","catch","finally","preperedPeople","useMemo","map","find","mum","undefined","dad","length","NotFoundPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.f65278ca.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink, Outlet } from 'react-router-dom';\n\nimport './App.scss';\n\nconst getLinkClass = (\n  { isActive }: { isActive: boolean },\n) => classNames('navbar-item',\n  { 'has-background-grey-lighter': isActive });\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinkClass} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person,\n}) => {\n  const {\n    slug, sex, name, born, died, mother, father, motherName, fatherName,\n  } = person;\n\n  const { slug: slugValue } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': slugValue === slug,\n      })}\n    >\n      <td>\n        <Link\n          to={`../${slug}`}\n          className={classNames({\n            'has-text-danger': sex === 'f',\n          })}\n        >\n          {name}\n        </Link>\n      </td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      {motherName && !mother && (\n        <td>\n          {motherName}\n        </td>\n      )}\n      {mother && (\n        <td>\n          <Link\n            className=\"has-text-danger\"\n            to={`/people/${mother.slug}`}\n          >\n            {mother.name}\n          </Link>\n        </td>\n      )}\n      {!motherName && (\n        <td>\n          -\n        </td>\n      )}\n      {fatherName && !father && (\n        <td>\n          {fatherName}\n        </td>\n      )}\n      {father && (\n        <td>\n          <Link\n            to={`/people/${father.slug}`}\n          >\n            {father.name}\n          </Link>\n        </td>\n      )}\n      {!fatherName && (\n        <td>\n          -\n        </td>\n      )}\n    </tr>\n  );\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport { Loader } from './Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PersonLink } from './PersonLink';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setError(false);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const preperedPeople: Person[] = useMemo(() => {\n    return people.map(person => {\n      const mother = people\n        .find(mum => mum.name === person.motherName) || undefined;\n      const father = people\n        .find(dad => dad.name === person.fatherName) || undefined;\n\n      return {\n        ...person,\n        mother,\n        father,\n      };\n    });\n  }, [people]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {preperedPeople.map(person => (\n                  <PersonLink\n                    key={person.slug}\n                    person={person}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  Navigate, Route, HashRouter as Router, Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}